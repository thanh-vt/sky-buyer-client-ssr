import type {NextPage} from 'next'
import Head from 'next/head'
import Image from 'next/image'
import {useCallback, useEffect, useState} from "react";
import {useDispatch, useSelector} from "react-redux";
import {RootState} from "../components/store";
import {initToken} from "../components/store/tokenSlice";
import {AppHeader} from "../components/layout/header/AppHeader";
import {decrement, increment} from "../components/store/counterSlice";

// const Home: NextPage = () => {
//   return (
//     <div className={styles.container}>
//       <Head>
//         <title>Create Next App</title>
//         <meta name="description" content="Generated by create next app" />
//         <link rel="icon" href="/favicon.ico" />
//       </Head>
//
//       <main className={styles.main}>
//         <h1 className={styles.title}>
//           Welcome to <a href="https://nextjs.org">Next.js!</a>
//         </h1>
//
//         <p className={styles.description}>
//           Get started by editing{' '}
//           <code className={styles.code}>pages/index.tsx</code>
//         </p>
//
//         <div className={styles.grid}>
//           <a href="https://nextjs.org/docs" className={styles.card}>
//             <h2>Documentation &rarr;</h2>
//             <p>Find in-depth information about Next.js features and API.</p>
//           </a>
//
//           <a href="https://nextjs.org/learn" className={styles.card}>
//             <h2>Learn &rarr;</h2>
//             <p>Learn about Next.js in an interactive course with quizzes!</p>
//           </a>
//
//           <a
//             href="https://github.com/vercel/next.js/tree/canary/examples"
//             className={styles.card}
//           >
//             <h2>Examples &rarr;</h2>
//             <p>Discover and deploy boilerplate example Next.js projects.</p>
//           </a>
//
//           <a
//             href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
//             className={styles.card}
//           >
//             <h2>Deploy &rarr;</h2>
//             <p>
//               Instantly deploy your Next.js site to a public URL with Vercel.
//             </p>
//           </a>
//         </div>
//       </main>
//
//       <footer className={styles.footer}>
//         <a
//           href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
//           target="_blank"
//           rel="noopener noreferrer"
//         >
//           Powered by{' '}
//           <span className={styles.logo}>
//             <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
//           </span>
//         </a>
//       </footer>
//     </div>
//   )
// }


const Home: NextPage = () => {
  const [title, setTitle] = useState('ThanhVT');
  const setTitleFunc = useCallback(() => {
    setTitle((document.getElementById('titleInput') as HTMLInputElement).value);
  }, []);
  const count = useSelector((state: RootState) => state.counter.value);
  const theme = useSelector((state: RootState) => state.theme.value);
  const dispatch = useDispatch();
  useEffect(() => {
    dispatch(initToken());
  }, [dispatch]);
  return (
      <div className={`App ${theme}`}>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app"/>
          <link rel="icon" href="/favicon.ico"/>
        </Head>
        <AppHeader/>
        <div className="App-container">
          <div className="App-main">
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16}/>
            <p>
              Edit <code>src/App.tsx</code> and save to reload.
            </p>
            <div
                className="bg-danger"
                style={{width: '500px', height: '1000px'}}
            />
            <a
                className="App-link"
                href="https://reactjs.org"
                target="_blank"
                rel="noopener noreferrer"
            >
              Learn React <br/>
              Owner: {title} <br/>
              Count: {count}
            </a>

            <input id={'titleInput'} type="text"/>
            <button onClick={setTitleFunc}>Set title</button>
            <button
                aria-label="Increment value"
                onClick={() => dispatch(increment())}
            >
              Increment
            </button>
            <span>{count}</span>
            <button
                aria-label="Decrement value"
                onClick={() => dispatch(decrement())}
            >
              Decrement
            </button>
          </div>
        </div>
      </div>
  );
}

export default Home
